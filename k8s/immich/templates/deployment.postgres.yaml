apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  revisionHistoryLimit: 3

  selector:
    matchLabels:
      app: postgres

  template:
    metadata:
      labels:
        app: postgres
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: disktype
                    operator: In
                    values: [ssd]

      securityContext:
        runAsUser: 	3000 # k8s-nfs on nas
        runAsGroup: 3001 # k8s-nfs on nas

      containers:
        - name: postgres
          image: {{ .Values.postgres.image }}:{{ .Values.postgres.tag }}
          #command: [ postgres ]
          args:
            - '-c'
            - 'shared_preload_libraries=vectors.so'
            - '-c'
            - 'search_path="$$user", public, vectors'
            - '-c'
            - 'logging_collector=on'
            - '-c'
            - 'max_wal_size=2GB'
            - '-c'
            - 'shared_buffers=512MB'
            - '-c'
            - 'wal_compression=on'
          env:
            - name: POSTGRES_DB
              value: immich
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-password
                  key: password
            - name: POSTGRES_INITDB_ARGS
              value: '--data-checksums'
          ports:
            - name: pg
              containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pg-data
          #resources:
          #  requests:
          #    memory: "20Mi"
          #    cpu: "20m"

      volumes:
        - name: pg-data
          persistentVolumeClaim:
            claimName: pg-data

