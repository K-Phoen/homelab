apiVersion: apps/v1
kind: Deployment
metadata:
  name: miniflux
spec:
  replicas: 1
  revisionHistoryLimit: 3

  selector:
    matchLabels:
      app: miniflux

  template:
    metadata:
      annotations:
        k8s.grafana.com/scrape: 'true'
        k8s.grafana.com/metrics.portNumber: '8080'
        k8s.grafana.com/metrics.scrapeInterval: '30s'
        k8s.grafana.com/job: 'miniflux'
      labels:
        app: miniflux
    spec:
      automountServiceAccountToken: false

      containers:
        - name: miniflux
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          env:
            # https://miniflux.app/docs/configuration.html
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: miniflux-db-url
                  key: password
            - name: RUN_MIGRATIONS
              value: '1'
            - name: CREATE_ADMIN
              value: '1'
            - name: ADMIN_USERNAME
              value: kevin
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: miniflux-admin
                  key: password
            - name: METRICS_COLLECTOR
              value: '1'
            - name: METRICS_ALLOWED_NETWORKS
              value: '10.42.0.0/16'
            #- name: METRICS_USERNAME
            #  value: miniflux
            #- name: METRICS_PASSWORD
            #  value: LALA                                                                                                                                                                  
            - name: BASE_URL
              value: https://rss.kevingomez.fr
            - name: LOG_FORMAT
              value: json
            - name: LOG_LEVEL
              value: warning
          ports:
            - name: http
              containerPort: 8080
          resources:
            requests:
              memory: "75Mi"
              cpu: "10m"
